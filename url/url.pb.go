// Code generated by protoc-gen-go. DO NOT EDIT.
// source: url.proto

package url

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2def92d9e1aa990, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UrlData struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UrlData) Reset()         { *m = UrlData{} }
func (m *UrlData) String() string { return proto.CompactTextString(m) }
func (*UrlData) ProtoMessage()    {}
func (*UrlData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2def92d9e1aa990, []int{1}
}

func (m *UrlData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UrlData.Unmarshal(m, b)
}
func (m *UrlData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UrlData.Marshal(b, m, deterministic)
}
func (m *UrlData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UrlData.Merge(m, src)
}
func (m *UrlData) XXX_Size() int {
	return xxx_messageInfo_UrlData.Size(m)
}
func (m *UrlData) XXX_DiscardUnknown() {
	xxx_messageInfo_UrlData.DiscardUnknown(m)
}

var xxx_messageInfo_UrlData proto.InternalMessageInfo

func (m *UrlData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "url.Empty")
	proto.RegisterType((*UrlData)(nil), "url.UrlData")
}

func init() { proto.RegisterFile("url.proto", fileDescriptor_a2def92d9e1aa990) }

var fileDescriptor_a2def92d9e1aa990 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2d, 0xca, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2d, 0xca, 0x51, 0x62, 0xe7, 0x62, 0x75, 0xcd,
	0x2d, 0x28, 0xa9, 0x54, 0x92, 0xe5, 0x62, 0x0f, 0x2d, 0xca, 0x71, 0x49, 0x2c, 0x49, 0x14, 0x12,
	0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x8d,
	0xac, 0xb8, 0x98, 0x43, 0x8b, 0x72, 0x84, 0x8c, 0xb9, 0x84, 0xdd, 0x53, 0x4b, 0x82, 0x12, 0xf3,
	0x52, 0xf2, 0x73, 0x41, 0x6a, 0x83, 0x4b, 0x8a, 0x52, 0x13, 0x73, 0x85, 0xb8, 0xf4, 0x40, 0xc6,
	0x82, 0x0d, 0x92, 0xe2, 0x01, 0xb3, 0xa1, 0x66, 0x29, 0x31, 0x18, 0x30, 0x26, 0xb1, 0x81, 0xed,
	0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x32, 0x77, 0x83, 0x85, 0x7c, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UrlClient is the client API for Url service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UrlClient interface {
	GetRandomDataStream(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Url_GetRandomDataStreamClient, error)
}

type urlClient struct {
	cc *grpc.ClientConn
}

func NewUrlClient(cc *grpc.ClientConn) UrlClient {
	return &urlClient{cc}
}

func (c *urlClient) GetRandomDataStream(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Url_GetRandomDataStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Url_serviceDesc.Streams[0], "/url.Url/GetRandomDataStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &urlGetRandomDataStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Url_GetRandomDataStreamClient interface {
	Recv() (*UrlData, error)
	grpc.ClientStream
}

type urlGetRandomDataStreamClient struct {
	grpc.ClientStream
}

func (x *urlGetRandomDataStreamClient) Recv() (*UrlData, error) {
	m := new(UrlData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UrlServer is the server API for Url service.
type UrlServer interface {
	GetRandomDataStream(*Empty, Url_GetRandomDataStreamServer) error
}

func RegisterUrlServer(s *grpc.Server, srv UrlServer) {
	s.RegisterService(&_Url_serviceDesc, srv)
}

func _Url_GetRandomDataStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UrlServer).GetRandomDataStream(m, &urlGetRandomDataStreamServer{stream})
}

type Url_GetRandomDataStreamServer interface {
	Send(*UrlData) error
	grpc.ServerStream
}

type urlGetRandomDataStreamServer struct {
	grpc.ServerStream
}

func (x *urlGetRandomDataStreamServer) Send(m *UrlData) error {
	return x.ServerStream.SendMsg(m)
}

var _Url_serviceDesc = grpc.ServiceDesc{
	ServiceName: "url.Url",
	HandlerType: (*UrlServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRandomDataStream",
			Handler:       _Url_GetRandomDataStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "url.proto",
}
